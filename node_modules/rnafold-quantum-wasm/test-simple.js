/**
 * Simple test script to verify the WebAssembly bridge works
 */

const { RnaFoldQuantumClient } = require('./dist/index.js');

async function test() {
    console.log('='.repeat(70));
    console.log('Testing RNA Fold Quantum Client with WebAssembly');
    console.log('='.repeat(70));

    try {
        // Create client
        console.log('\n[1/3] Creating client...');
        const client = new RnaFoldQuantumClient();
        console.log('✓ Client created');

        // Initialize (load Pyodide)
        console.log('\n[2/3] Initializing (loading Pyodide + Python modules)...');
        console.log('      This may take 10-30 seconds on first run...');
        const startInit = Date.now();
        await client.initialize();
        const initTime = ((Date.now() - startInit) / 1000).toFixed(2);
        console.log(`✓ Initialization complete (${initTime}s)`);

        // Run a simple prediction
        console.log('\n[3/3] Testing structure prediction...');
        const sequence = 'GGGAAACCC';
        const startPred = Date.now();
        const result = await client.predictStructure(sequence);
        const predTime = ((Date.now() - startPred) / 1000).toFixed(2);

        console.log(`✓ Prediction complete (${predTime}s)`);
        console.log('\nResults:');
        console.log('  Sequence: ', result.sequence);
        console.log('  Structure:', result.structure);
        console.log('  MFE:      ', result.mfe.toFixed(2), 'kcal/mol');
        console.log('  Base pairs:', result.base_pairs);

        console.log('\n' + '='.repeat(70));
        console.log('✓ All tests passed!');
        console.log('='.repeat(70));

    } catch (error) {
        console.error('\n❌ Test failed:', error.message);
        console.error(error.stack);
        process.exit(1);
    }
}

test().catch(console.error);
