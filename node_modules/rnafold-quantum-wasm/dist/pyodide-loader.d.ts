/**
 * Pyodide Loader - Manages loading and initialization of Pyodide
 */
import { PyodideInterface } from 'pyodide';
export declare class PyodideLoader {
    private pyodide;
    private initialized;
    private initializationPromise;
    /**
     * Initialize Pyodide and load the Python modules
     */
    initialize(): Promise<void>;
    private _doInitialize;
    /**
     * Load the Python RNA folding module
     */
    private loadPythonModule;
    /**
     * Get embedded Python code (for browser environments)
     */
    private getEmbeddedPythonCode;
    /**
     * Run Python code
     */
    runPython(code: string): Promise<any>;
    /**
     * Call a Python function
     */
    callPythonFunction(functionName: string, ...args: any[]): Promise<any>;
    /**
     * Get the Pyodide instance
     */
    getPyodide(): PyodideInterface | null;
    /**
     * Check if Pyodide is initialized
     */
    isInitialized(): boolean;
}
/**
 * Get the singleton PyodideLoader instance
 */
export declare function getPyodideLoader(): PyodideLoader;
